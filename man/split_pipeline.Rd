% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debug_pipeline.R
\name{split_pipeline}
\alias{split_pipeline}
\title{Split a pipeline expression into a list of expressions}
\usage{
split_pipeline(pipeline)
}
\arguments{
\item{pipeline}{An unevaluated expression of a pipeline to be split.}
}
\value{
A list of unevaluated expressions of each element piped together.
}
\description{
\code{split_pipeline} takes an unevaluated expression of a pipeline and splits it
into a list of expressions.
}
\details{
Here "expression" is use colloquially to refer to a bare language object,
i.e. like those returned by \code{\link{quote}} or \code{\link[rlang:expr]{rlang::expr}}, \emph{not} an object of
class "expression" like those returned by \code{\link{expression}}. The latter can be
turned into the former by subsetting, e.g. \code{expression(1:5 \%>\% rev())[[1]]}.

\code{split_pipeline} does not split nested pipelines.

[[1]: R:[1
}
\examples{
\dontrun{
library(magrittr)

split_pipeline(
    quote(x <- 1:5 \%>\% rev \%>\% {. * 2} \%>\% sample(replace = TRUE))
)
}

}
\seealso{
The unexported \href{https://github.com/tidyverse/magrittr/blob/master/R/split_chain.R}{\code{magrittr:::split_chain}},
which does not handle assignment, but collects the particular pipes used.
}
